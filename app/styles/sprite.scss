// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$logo-name: 'logo';
$logo-x: 0px;
$logo-y: 0px;
$logo-offset-x: 0px;
$logo-offset-y: 0px;
$logo-width: 138px;
$logo-height: 60px;
$logo-total-width: 138px;
$logo-total-height: 154px;
$logo-image: '../images/sprite.png';
$logo: (0px, 0px, 0px, 0px, 138px, 60px, 138px, 154px, '../images/sprite.png', 'logo', );
$qq-logo-name: 'qq-logo';
$qq-logo-x: 118px;
$qq-logo-y: 89px;
$qq-logo-offset-x: -118px;
$qq-logo-offset-y: -89px;
$qq-logo-width: 18px;
$qq-logo-height: 19px;
$qq-logo-total-width: 138px;
$qq-logo-total-height: 154px;
$qq-logo-image: '../images/sprite.png';
$qq-logo: (118px, 89px, -118px, -89px, 18px, 19px, 138px, 154px, '../images/sprite.png', 'qq-logo', );
$qr-name: 'qr';
$qr-x: 0px;
$qr-y: 65px;
$qr-offset-x: 0px;
$qr-offset-y: -65px;
$qr-width: 89px;
$qr-height: 89px;
$qr-total-width: 138px;
$qr-total-height: 154px;
$qr-image: '../images/sprite.png';
$qr: (0px, 65px, 0px, -65px, 89px, 89px, 138px, 154px, '../images/sprite.png', 'qr', );
$txweib-logo-name: 'txweib-logo';
$txweib-logo-x: 94px;
$txweib-logo-y: 89px;
$txweib-logo-offset-x: -94px;
$txweib-logo-offset-y: -89px;
$txweib-logo-width: 19px;
$txweib-logo-height: 19px;
$txweib-logo-total-width: 138px;
$txweib-logo-total-height: 154px;
$txweib-logo-image: '../images/sprite.png';
$txweib-logo: (94px, 89px, -94px, -89px, 19px, 19px, 138px, 154px, '../images/sprite.png', 'txweib-logo', );
$xlweib-logo-name: 'xlweib-logo';
$xlweib-logo-x: 94px;
$xlweib-logo-y: 65px;
$xlweib-logo-offset-x: -94px;
$xlweib-logo-offset-y: -65px;
$xlweib-logo-width: 22px;
$xlweib-logo-height: 19px;
$xlweib-logo-total-width: 138px;
$xlweib-logo-total-height: 154px;
$xlweib-logo-image: '../images/sprite.png';
$xlweib-logo: (94px, 65px, -94px, -65px, 22px, 19px, 138px, 154px, '../images/sprite.png', 'xlweib-logo', );
$spritesheet-width: 138px;
$spritesheet-height: 154px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($logo, $qq-logo, $qr, $txweib-logo, $xlweib-logo, );
$spritesheet: (138px, 154px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
